# Generated by Django 5.0.7 on 2024-08-18 07:24

import django.db.models.deletion
import django.db.models.functions.text
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("projects", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="component",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)ss_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Добавлен",
            ),
        ),
        migrations.AddField(
            model_name="component",
            name="team_members",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)ss",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Команда",
            ),
        ),
        migrations.AddField(
            model_name="component",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)ss_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Обновлен",
            ),
        ),
        migrations.AddConstraint(
            model_name="progressstatus",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                name="progressstatus_unique_name",
                violation_error_message="Данное название уже существует.",
            ),
        ),
        migrations.AddField(
            model_name="component",
            name="status",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(class)ss",
                to="projects.progressstatus",
                verbose_name="Статус работы",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)ss_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Добавлен",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="director",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="directed_projects",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Руководитель проекта",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="status",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(class)ss",
                to="projects.progressstatus",
                verbose_name="Статус работы",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="team_members",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)ss",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Команда",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)ss_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Обновлен",
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)ss_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Добавлен",
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="projects.project",
                verbose_name="Проект",
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="status",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="%(class)ss",
                to="projects.progressstatus",
                verbose_name="Статус работы",
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="team_members",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)ss",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Команда",
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)ss_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Обновлен",
            ),
        ),
        migrations.AddField(
            model_name="component",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="projects.service",
                verbose_name="Сервис",
            ),
        ),
        migrations.AddConstraint(
            model_name="worktag",
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower("name"),
                name="worktag_unique_name",
                violation_error_message="Данное название уже существует.",
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)ss",
                to="projects.worktag",
                verbose_name="Теги",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)ss",
                to="projects.worktag",
                verbose_name="Теги",
            ),
        ),
        migrations.AddField(
            model_name="component",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                related_name="%(class)ss",
                to="projects.worktag",
                verbose_name="Теги",
            ),
        ),
        migrations.AddConstraint(
            model_name="service",
            constraint=models.CheckConstraint(
                check=models.Q(("end_date__gt", models.F("start_date"))),
                name="service_end_date_greater_start_date",
                violation_error_message="Дата окончания должны быть позднее даты начала.",
            ),
        ),
        migrations.AddConstraint(
            model_name="project",
            constraint=models.CheckConstraint(
                check=models.Q(("end_date__gt", models.F("start_date"))),
                name="project_end_date_greater_start_date",
                violation_error_message="Дата окончания должны быть позднее даты начала.",
            ),
        ),
        migrations.AddConstraint(
            model_name="component",
            constraint=models.CheckConstraint(
                check=models.Q(("end_date__gt", models.F("start_date"))),
                name="component_end_date_greater_start_date",
                violation_error_message="Дата окончания должны быть позднее даты начала.",
            ),
        ),
    ]
